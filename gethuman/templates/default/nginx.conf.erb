user <%= node[:nginx][:user] %>;
worker_processes  <%= node[:nginx][:worker_processes] %>;

error_log  <%= node[:nginx][:log_dir] %>/error.log;
pid        <%= node[:nginx][:pid_file] %>;

events {
  worker_connections  <%= node[:nginx][:worker_connections] %>;
}

http {
  include       <%= node[:nginx][:dir] %>/mime.types;
  default_type  application/octet-stream;

  access_log <%= node[:nginx][:log_dir] %>/access.log;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  <% node[:nginx][:log_format].each do |name, format| %>
  log_format <%= name %> <%= format %>;
  <% end %>

  gzip  <%= node[:nginx][:gzip] %>;
  gzip_static  <%= node[:nginx][:gzip_static] %>;
  <% if node[:nginx][:gzip] == "on" %>
  gzip_http_version <%= node[:nginx][:gzip_http_version] %>;
  gzip_comp_level <%= node[:nginx][:gzip_comp_level] %>;
  gzip_proxied <%= node[:nginx][:gzip_proxied] %>;
  gzip_types <%= node[:nginx][:gzip_types].join(' ') %>;
  gzip_vary <%= node[:nginx][:gzip_vary] %>;
  gzip_disable "<%= node[:nginx][:gzip_disable] %>";
  <% end %>

  client_max_body_size <%= node[:nginx][:client_max_body_size] %>;

  server_names_hash_bucket_size <%= node[:nginx][:server_names_hash_bucket_size] %>;

  include <%= node[:nginx][:dir] %>/conf.d/*.conf;
  include <%= node[:nginx][:dir] %>/sites-enabled/*;

  # the nginx server instance
  server {
# http://nginx.org/en/docs/http/server_names.html
    listen 80 default_server;
    server_name  gethuman.com;
#   rewrite ^ $scheme://www.gethuman.com$request_uri permanent;
    rewrite ^ https://secure-store.nike.com/us/en_us permanent;

# proxy cache
  proxy_cache_path  /Users/rashaunstovall/airpair/airpair-cookbooks/proxy_cache
                    levels=1:2
                    keys_zone=czone:32m max_size=256m inactive=1m;

    # use 302 for testing
    # use 301 for production
#   return 302 https://secure-store.nike.com/us/en_us;
#   location / {
#     proxy_redirect off;
#     proxy_pass http://127.0.0.1:80;
#   }
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://subdomain.your_domain.com;
    proxy_redirect off;
  }

# USE EXACT NAMES NOT REGULAR EXPRESSIONS
# server {
#     listen       80;
#     server_name  *.gethuman.com;
# }

# server {
#     listen       80;
#     server_name  gethuman.co;
# }

# server {
#     listen       80;
#     server_name  *.gethuman.co;
# }

# server {
#   listen 81;
#   listen 0.0.0.0:81;
#   access_log  off;
#   access_log /usr/local/var/log/nginx/access.log;
#   error_log   off;
#   error_log /usr/local/var/log/nginx/error.log;
#   server_name sneakyhead.com;
#   server_name sneakyhead.com sneakyhead;

    # pass the request to the node.js server with the correct headers
    # and much more can be added, see nginx config options
#   location / {
#     proxy_redirect off;
#     proxy_pass http://127.0.0.1:80;

#     proxy_set_header Host $host;
#     proxy_set_header Host $http_host;
#     proxy_set_header X-NginX-Proxy true;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

#     proxy_buffers 4 32k;
#     proxy_buffer_size 4k;
#     proxy_send_timeout 90;
#     proxy_read_timeout 90;
#     proxy_connect_timeout 90;
#     proxy_busy_buffers_size 64k;
#     client_max_body_size 10m;
#     client_body_buffer_size 128k;
#   }

#   location /http/ {
#       proxy_http_version 1.1;
#       proxy_pass http://backend;
#       proxy_set_header Connection "";
#   }
# }
}

